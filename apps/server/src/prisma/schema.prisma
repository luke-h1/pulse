datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

generator typegraphql {
  provider                  = "typegraphql-prisma"
  output                    = "./generated/type-graphql"
  omitOutputFieldsByDefault = ["password"]
}

enum Role {
  USER
  ADMIN
}

enum AccountStatus {
  BANNED
  ON_HOLD
  ACTIVE
}

enum Status {
  PUBLISHED
  DRAFT
}

model User {
  id            String        @id @default(cuid())
  provider      String
  firstName     String
  lastName      String
  email         String?       @unique
  emailVerified DateTime?
  username      String        @unique
  password      String
  image         String?
  role          Role          @default(USER)
  github        String?
  website       String?
  twitter       String?
  bio           String?
  location      String?
  accountStatus AccountStatus @default(ACTIVE)
  projects      Project[]
  posts         Post[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id           String   @id @default(cuid())
  title        String   @db.VarChar(50)
  slug         String   @unique @db.VarChar(50)
  intro        String
  image        String?
  content      Json
  githubUrl    String?
  siteUrl      String?
  appStoreUrl  String?
  playStoreUrl String?
  tags         String[]
  status       Status   @default(DRAFT)
  readingTime String
  author       User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id          String   @id @default(cuid())
  title       String   @db.VarChar(50)
  slug        String   @unique @db.VarChar(50)
  intro       String
  image       String?
  tags        String[]
  content     Json
  status      Status   @default(DRAFT)
  readingTime String
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
